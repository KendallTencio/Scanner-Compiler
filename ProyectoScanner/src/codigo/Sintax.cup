package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;

    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
    }
:};

terminal Reservadas, Operador, Transac, Units, Identificador, Literal, Address, As, Bool, Break,
         Byte, Bytes, Constructor, Continue, Contract, Delete, Do, Else, Enum, For, From, Function,
         Hex, If, Import, Int, Internal, Mapping, Modifier, Payable, Pragma, Private, Public, Return,
         Returns, Solidity, String, Struct, This, True, Ufixed, Uint, Var, View, While, Pipe, ShiftLeft,
         ShiftRight, DobleAsterisco, Coma, PuntoComa, Punto, ParenCuadAbre, ParenCuadCierra, SignoPregunta,
         DosPuntos, LlaveAbre, LlaveCierra, Ampersand, Elevar, Virgulilla, Suma, Resta, Mult, Div, Mod,
         ParentAbre, ParentCierre, Op_Booleano, Op_relacional, Op_atribucion, IntValue, UintValue, BytesValue,
         ERROR;

non terminal INICIO;
non terminal STRUCTDEF, STRUCTCONTEN, DECLARVARIABLE, DECLARVARDOS;
non terminal FUNCIONDEF, FUNCIONATRIB, FUNATRIBDOS ,MODIFICADORES, FUNCIONRETURNS,FUNCIONCONTEN, FUNCIONCUERPO, FUNCIONRETURN;
non terminal VARASIGNA, FUNCCALL, PARAMFUNC;
non terminal TYPENAME, ELEMENTARYTYPENAME, ARRAYDECLAR, ACCESSMOD;
non terminal ENUMDEF, ENUMCONTEN, ENUMLIST, ENUMVALUE;
non terminal CONTRACTDEF, CONTRACTPART, CONTRACTPART1, CONTRACTPART2, CONTRACTPART3;


start with INICIO;


INICIO ::= STRUCTDEF | FUNCIONDEF | VARASIGNA | DECLARVARIABLE | FUNCCALL | CONTRACTDEF | ENUMDEF;

STRUCTDEF ::= Struct Identificador STRUCTCONTEN;
STRUCTCONTEN ::= LlaveAbre DECLARVARIABLE LlaveCierra PuntoComa;

DECLARVARIABLE ::= TYPENAME ACCESSMOD Identificador PuntoComa | TYPENAME ACCESSMOD Identificador Op_atribucion Literal PuntoComa | ARRAYDECLAR; 
ARRAYDECLAR ::= TYPENAME ParenCuadAbre ParenCuadCierra Identificador PuntoComa | TYPENAME ParenCuadAbre ParenCuadCierra Identificador Op_atribucion Literal PuntoComa;

ACCESSMOD ::= Private | Public | {: RESULT = null; :};

CONTRACTDEF ::= Contract Identificador LlaveAbre CONTRACTPART LlaveCierra PuntoComa;
CONTRACTPART ::= ENUMDEF CONTRACTPART | CONTRACTPART1 | {: RESULT = null; :};
CONTRACTPART1 ::= DECLARVARIABLE CONTRACTPART1 | CONTRACTPART2 | {: RESULT = null; :};
CONTRACTPART2 ::= STRUCTDEF CONTRACTPART2 | CONTRACTPART3 | {: RESULT = null; :};
CONTRACTPART3 ::= FUNCIONDEF CONTRACTPART3 | {: RESULT = null; :};


ENUMDEF ::= Enum Identificador ENUMCONTEN;
ENUMCONTEN ::= LlaveAbre Identificador ENUMLIST LlaveCierra PuntoComa;
ENUMLIST ::= Coma ENUMVALUE | {: RESULT = null; :};
ENUMVALUE ::= Identificador ENUMLIST;

FUNCIONDEF ::= Function Identificador FUNCIONATRIB MODIFICADORES FUNCIONRETURNS FUNCIONCONTEN;

FUNCIONATRIB ::= ParentAbre TYPENAME Identificador FUNATRIBDOS;
FUNATRIBDOS ::= Coma TYPENAME Identificador FUNATRIBDOS | ParentCierre;

MODIFICADORES ::= Payable | Private | Public | Internal | {: RESULT = null; :};
FUNCIONRETURNS ::= Returns FUNCIONATRIB | {: RESULT = null; :};
FUNCIONCONTEN ::= LlaveAbre DECLARVARIABLE FUNCIONCUERPO FUNCIONRETURN LlaveCierra;
FUNCIONCUERPO ::= {: RESULT = null; :};
FUNCIONRETURN ::= Return Identificador PuntoComa;

TYPENAME ::= ELEMENTARYTYPENAME;

ELEMENTARYTYPENAME ::= Bool | Byte | Bytes | Address | Int | String | Ufixed | Uint;

VARASIGNA ::= Identificador Op_atribucion Literal;
FUNCCALL  ::= Identificador ParentAbre PARAMFUNC ParentCierre PuntoComa;
PARAMFUNC ::= TYPENAME Identificador;

